# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: "3"
silent: true
vars:
  TARGET:
    sh: 'echo "${TARGET:-"dev"}"'
  PROFILE:
    sh: 'echo "${PROFILE:-"default"}"'
  PROJECT:
    sh: 'echo "$(basename $(pwd))"'
  LOCAL_BIN_PATH:
    sh: 'echo "{{.ROOT_DIR}}/venv/bin"'
  BUILD_DATE:
    sh: "date '+%Y-%m-%d-%H:%M:%S'"
  BUILD_DATE_SHORT:
    sh: "date '+%Y-%m-%d-%H%M%S'"
  GIT_LATEST_TAG:
    sh: '$(git tag -l 2>/dev/null | sort -r -V | head -n 1 2>/dev/null) || echo "not a git repo"'
  TERM: screen-256color
  DOCS_PATH: "{{.ROOT_DIR}}/docs"
  PYTHON_VENV_PATH: "{{.ROOT_DIR}}/venv"
  SCRIPT_PATH: "{{.ROOT_DIR}}/scripts"
  VERSION: '{{default "0.0.1" .GIT_LATEST_TAG}}'
  OUTPUT_PATH: "{{.ROOT_DIR}}/output"
  KUBERNETES_DIR: "{{.ROOT_DIR}}/infrastructure"
  TERRAFORM: "tofu"

env:
  TF_VAR_state_passphrase:
    sh: |
      grep 'AGE-SECRET-KEY-' {{.SOPS_AGE_KEY_FILE}} | sed 's/AGE-SECRET-KEY-//g' | awk '{print $NF}' || echo ""

# dotenv:
#   - "./secrets/${VENV:-local}.env"

includes:
  variables:
    taskfile: ./Taskfile.vars.yml
    optional: true
  agebox:
    taskfile: ./tasks/Taskfile.agebox.yml
    optional: true
  ansible:
    taskfile: ./tasks/Taskfile.ansible.yml
    optional: true
  argocd:
    taskfile: ./tasks/Taskfile.argocd.yml
    optional: true
  aws:
    taskfile: ./tasks/Taskfile.aws.yml
    optional: true
  cdk:
    taskfile: ./tasks/Taskfile.cdk.yml
    optional: true
  chatgpt:
    taskfile: ./tasks/Taskfile.chatgpt.yml
    optional: true
  cloudflared:
    taskfile: ./tasks/Taskfile.cloudflared.yml
    optional: true
  cluster:
    taskfile: ./tasks/Taskfile.cluster.yml
    optional: true
  docker:
    taskfile: ./tasks/Taskfile.docker.yml
    optional: true
  dotnet:
    taskfile: ./tasks/Taskfile.dotnet.yml
    optional: true
  dynamodb:
    taskfile: ./tasks/Taskfile.dynamodb.yml
    optional: true
  flux:
    taskfile: ./tasks/Taskfile.flux.yml
    optional: true
  format:
    taskfile: ./tasks/Taskfile.format.yml
    optional: true
  github:
    taskfile: ./tasks/Taskfile.github.yml
    optional: true
  gitlab:
    taskfile: ./tasks/Taskfile.gitlab.yml
    optional: true
  git:
    taskfile: ./tasks/Taskfile.git.yml
    optional: true
  go:
    taskfile: ./tasks/Taskfile.go.yml
    optional: true
  helmfile:
    taskfile: ./tasks/Taskfile.helmfile.yml
    optional: true
  hugo:
    taskfile: ./tasks/Taskfile.hugo.yml
    optional: true
  kube:
    taskfile: ./tasks/Taskfile.kube.yml
    optional: true
  lint:
    taskfile: ./tasks/Taskfile.lint.yml
    optional: true
  openapi:
    taskfile: ./tasks/Taskfile.openapi.yml
    optional: true
  precommit:
    taskfile: ./tasks/Taskfile.precommit.yml
    optional: true
  python:
    taskfile: ./tasks/Taskfile.python.yml
    optional: true
  sops:
    taskfile: ./tasks/Taskfile.sops.yml
    optional: true
  steampipe:
    taskfile: ./tasks/Taskfile.steampipe.yml
    optional: true
  terraform:
    taskfile: ./tasks/Taskfile.terraform.yml
    optional: true
  vault:
    taskfile: ./tasks/Taskfile.vault.yml
    optional: true
  workspace:
    taskfile: ./tasks/Taskfile.workspace.yml
    optional: true
  custom:
    taskfile: ./Taskfile.custom.yml
    optional: true

tasks:
  default:
    cmds:
      - |
        task -l

  show:
    desc: Show task variables
    cmds:
      - |
        echo "ROOT_PATH: {{.ROOT_DIR}}"
        echo "ENV: ${ENV:-"local"}"
        echo "PROFILE: {{.PROFILE}}"
        echo "PROJECT: {{.PROJECT}}"
        echo "VERSION: {{.VERSION}}"
        echo "OS: {{OS}}"
        echo "ARCH: {{ARCH}}"
        echo "LOCAL_BIN_PATH: {{.LOCAL_BIN_PATH}}"
        echo "DOCS_PATH: {{.DOCS_PATH}}"
        echo "PYTHON_VENV_PATH: {{.PYTHON_VENV_PATH}}"
        echo "SCRIPT_PATH: {{.SCRIPT_PATH}}"
        echo "BUILD_DATE: {{.BUILD_DATE}}"
        echo "GIT_LATEST_TAG: {{.GIT_LATEST_TAG}}"
        echo "SOPS_AGE_KEY_FILE: {{.SOPS_AGE_KEY_FILE}}"
        echo "TF_VAR_state_passphrase: ${TF_VAR_state_passphrase}"

  show:all:
    desc: Show all variables for task namespaces
    cmds:
      - |
        echo "## Show ##";
        task show
        echo ""
        for taskitem in $(task -l | cut -d " " -f2 | grep show | sed 's/.$//'); do
          if [[ "$taskitem" != "show:all" ]]; then
            echo "## Show - ${taskitem} ##";
            task $taskitem;
            echo "";
          fi
        done

  list:
    desc: List tasks by namespace (task list -- <namespace>)
    cmds:
      - |
        if [[ "{{.CLI_ARGS}}" != "" ]]; then
          task -l | grep {{default "" .CLI_ARGS}}
        else
          task -l
        fi

  toc:
    desc: Update the table of contents in README.md
    cmds:
      - |
        source {{.LOCAL_BIN_PATH}}/activate
        mdtoc README.md

  autocomplete:
    desc: Setup task autocomplete (zsh)
    cmds:
      - sudo curl https://raw.githubusercontent.com/go-task/task/main/completion/zsh/_task -o /usr/local/share/zsh/site-functions/_task
    status:
      - "test -f /usr/local/share/zsh/site-functions/_task"

  clean:
    cmds:
      - |
        kind delete cluster -n cluster1 || true
        kind delete cluster -n cluster2 || true
        rm -rf ./components/terraform/*/.terraform
        find ./components/terraform/ -type f \( -name "*.tfstate" -o -name "*.tfplan" -o -name "*.terraform" -o -name "*.lock.hcl" \) -exec rm -f {} + || true
        find ./components/terraform/ -type d \( -name "*.tfstate.d" \) -exec rm -rf {} + || true
        find ./secrets/{{.TARGET}} -type f \( -name "*.tfstate" -o -name "*.tfplan" -o -name ".terraform" -o -name "tfplan.json" \) -exec rm -f {} + || true

  atmos:
    desc: Run atmos CLI utility with provided arguments
    cmds:
      - |
        atmos {{.CLI_ARGS}}
    preconditions:
      - sh: '[[ "${TF_VAR_state_passphrase}" != "" ]]'
        msg: "Local AGE private key required to decrypt state: {{.SOPS_AGE_KEY_FILE}}\nTry running task sops:init"

  up:
    desc: Run atmos CLI utility workflow to bring up environment
    cmds:
      - atmos workflow up -f localhost --stack dev
    preconditions:
      - sh: '[[ "${TF_VAR_state_passphrase}" != "" ]]'
        msg: "Local AGE private key required to decrypt state: {{.SOPS_AGE_KEY_FILE}}\nTry running task sops:init"

  down:
    desc: Run atmos CLI utility workflow to tear down environment
    cmds:
      - atmos workflow down -f localhost --stack dev
    preconditions:
      - sh: '[[ "${TF_VAR_state_passphrase}" != "" ]]'
        msg: "Local AGE private key required to decrypt state: {{.SOPS_AGE_KEY_FILE}}\nTry running task sops:init"

  test:state:
    desc: Check all terraform .tfstate files have the encrypted_data element and are not empty.
    cmds:
      - |
        find ./components/terraform/ -type f -name "*.tfstate" ! -path "*/.terraform/terraform.tfstate" | while read -r file; do
          if ! jq -e '.encrypted_data' "$file" > /dev/null; then
            if ! jq -e '.backend.config.path' "$file" | grep -q null; then
              echo "Missing encrypted_data in $file and backend.config.path is null"
              exit 1
            else
              echo "Empty State - ${file}"
            fi
          else
            echo "State Encrypted: ${file}"
          fi  
        done
